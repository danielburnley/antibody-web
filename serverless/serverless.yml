service: serverless
provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: eu-west-2
  environment:
      UPLOAD_BUCKET: ${opt:stage, 'dev'}-covid19-antibody-uk
      DYNAMO_TABLE: ${opt:stage, 'dev'}-covid19-antibody-uk
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
      Resource: 
        Fn::GetAtt: 
          - DynamoDB
          - Arn
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
      Resource:
        Fn::Join:
          - ''
          - - 'arn:aws:s3:::'
            - Ref: S3
            - '/*'
plugins:
  - serverless-plugin-typescript
  - serverless-offline
  - serverless-jest-plugin
environment:
functions:
  generate:
    handler: handlers/generate.handler
    events:
      - http:
          method: POST
          path: generate
          cors: true
          authorizer: authorizer
  update:
    handler: handlers/update.handler
    events:
      - http:
          method: POST
          path: update
          cors: true
          authorizer: authorizer
  authorizer:
    type: TOKEN
    handler: handlers/authorizer.handler
custom:
  serverless-offline:
    httpPort: 4000
    stage: dev
    
resources:
  Resources:
    S3:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${opt:stage, 'dev'}-covid19-antibody-uk
        CorsConfiguration:
          CorsRules:
            -
              AllowedOrigins:
                - '*'
              AllowedHeaders:
                - '*'
              AllowedMethods:
                - GET
                - PUT
                - POST
                - HEAD
              MaxAge: 3000
    DynamoDB:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: guid
            AttributeType: S
        KeySchema:
          - AttributeName: guid
            KeyType: HASH
        TableName: ${opt:stage, 'dev'}-covid19-antibody-uk
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2
    ClientS3:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${opt:stage, 'dev'}-covid19-antibody-uk-client
        WebsiteConfiguration:
          IndexDocument: index.html
    ClientCloudFrontAccessIdentity:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: 'covid19-antibody-uk-client-oai'
    ClientBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: 'ClientS3'
        PolicyDocument:
          Statement:
            - Action:
                - 's3:GetObject'
              Effect: 'Allow'
              Principal:
                CanonicalUser: 
                  Fn::GetAtt:
                    - ClientCloudFrontAccessIdentity
                    - S3CanonicalUserId
              Resource: 
                Fn::Join:
                  - ''
                  - - 'arn:aws:s3:::'
                    - Ref: 'ClientS3'
                    - '/*'
    ClientCloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          CustomErrorResponses:
            - ErrorCachingMinTTL: 0
              ErrorCode: 403
              ResponseCode: 200
              ResponsePagePath: '/index.html'
            - ErrorCachingMinTTL: 0
              ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: '/index.html'
          DefaultCacheBehavior:
            DefaultTTL: 0
            MaxTTL: 0
            MinTTL: 0
            TargetOriginId: ClientS3Origin
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: none
            ViewerProtocolPolicy: allow-all
          DefaultRootObject: 'index.html'
          Enabled: true
          Origins:
            - DomainName: 
                Fn::GetAtt:
                  - ClientS3
                  - DomainName
              Id: ClientS3Origin
              S3OriginConfig:
                OriginAccessIdentity:
                  Fn::Join:
                    - ''
                    - - 'origin-access-identity/cloudfront/'
                      - Ref: ClientCloudFrontAccessIdentity
